# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
install_composer: &install_composer
  command: |
      cd /tmp
      EXPECTED_SIGNATURE=$(curl -q https://composer.github.io/installer.sig)
      php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
      ACTUAL_SIGNATURE=$(php -r "echo hash_file('SHA384', 'composer-setup.php');")
      if [ "$EXPECTED_SIGNATURE" != "$ACTUAL_SIGNATURE" ]
      then
          >&2 echo 'ERROR: Invalid installer signature'
          rm composer-setup.php
          exit 1
      fi
      sudo php composer-setup.php --quiet --install-dir /usr/local/bin --filename composer
      RESULT=$?
      rm composer-setup.php
      exit $RESULT

version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/php:7.1-apache-jessie
      - image: circleci/mysql:5.6.40

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mysql:9.4

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          <<: *install_composer

      - run: |
          cat << 'EOF' > .env
          SS_DATABASE_USERNAME='root'
          SS_DATABASE_PASSWORD=''
          SS_DATABASE_NAME='circle_test'
          SS_DATABASE_SERVER='127.0.0.1'
          SS_ENVIRONMENT_TYPE='dev'
          EOF

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "composer.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: echo 'deb http://packages.dotdeb.org jessie all' | sudo tee -a /etc/apt/sources.list
      - run: echo 'deb-src http://packages.dotdeb.org jessie all' | sudo tee -a /etc/apt/sources.list
      - run: cat /etc/apt/sources.list
      - run: cd /tmp
      - run: wget https://www.dotdeb.org/dotdeb.gpg
      - run: sudo apt-key add dotdeb.gpg
      - run: sudo apt-get update
      - run: sudo apt-get install php7.1-intl

      - run: composer install --no-progress --no-scripts --prefer-dist --optimize-autoloader --no-interaction --no-suggest
      - run: composer vendor-expose copy
      - run: framework/sake dev/build

      - save_cache:
          paths:
            - ./vendor
          key: v1-dependencies-{{ checksum "composer.json" }}

      # run tests!
      - run: phpunit
